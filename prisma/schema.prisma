// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User 모델: 사용자의 영구적인 게임 진행 상황을 저장합니다.
model User {
  id        String   @id @default(uuid())
  username  String   @unique
  highScore Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Animal 모델: 소환 가능한 동물 유닛의 정적 데이터를 저장합니다.
model Animal {
  id          String        @id @unique
  name        String
  cost        Int
  health      Int
  damage      Int
  attackSpeed Int
  range       Int
  type        String
  unlockedAt  StageUnlock[] // 이 동물이 어떤 스테이지에서 해금되는지 연결
}

// Monster 모델: 침략자 몬스터의 정적 데이터를 저장합니다.
model Monster {
  id        String  @id @unique
  name      String
  health    Int
  damage    Int
  moveSpeed Float
  goldDrop  Int
  waves     Wave[] // 이 몬스터가 등장하는 웨이브 연결
}

// StageUnlock 모델: 어떤 스테이지를 클리어해야 특정 동물이 해금되는지 정의합니다.
// 이는 정적인 데이터이므로, 서버 시작 시 메모리에 로드하여 사용합니다.
model StageUnlock {
  id       String @id @default(uuid())
  stageId  Int
  animalId String

  // StageUnlock과 Animal, Stage 모델 간의 관계 설정
  stage    Stage  @relation(fields: [stageId], references: [id])
  animal   Animal @relation(fields: [animalId], references: [id])
}

// Stage 모델: 각 스테이지의 정적 데이터를 저장합니다.
model Stage {
  id          Int           @id @unique
  name        String
  waves       Wave[]        // 이 스테이지의 웨이브 정보 연결
  unlockedAnimals StageUnlock[] // 이 스테이지에서 해금되는 동물 정보 연결
}

// Wave 모델: 각 스테이지의 웨이브 구성(등장 몬스터, 수량, 지연 시간)을 정의합니다.
model Wave {
  id           String  @id @default(uuid())
  stageId      Int
  monsterId    String
  monsterCount Int
  delay        Int // 다음 몬스터 소환까지의 지연 시간

  // Wave와 Stage, Monster 모델 간의 관계 설정
  stage        Stage   @relation(fields: [stageId], references: [id])
  monster      Monster @relation(fields: [monsterId], references: [id])
}